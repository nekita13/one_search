import numpy as np 
from datetime import datetime
def sigmoid(x, der=False):
    if der == True:
        return x*(1-x)  
    return 1/(1+np.exp(-x))
    
x = np.array([[0, 0, 1, 0, 0, 0,#+ 
               0, 1, 1, 0, 0, 0,
               1, 0, 1, 0, 0, 0,
               0, 0, 1, 0, 0, 0,
               0, 0, 1, 0, 0, 0,
               0, 0, 1, 0, 0, 0,],
               [0, 0, 0, 0, 0, 1,#+
                0, 0, 0, 0, 1, 1,
                0, 0, 0, 1, 0, 1,
                0, 0, 0, 0, 0, 1,
                0, 0, 0, 0, 0, 1,
                0, 0, 0, 0, 0, 1,],
               [0, 0, 0, 0, 0, 0,#+
                0, 0, 0, 1, 0, 0,
                0, 0, 1, 1, 0, 0,
                0, 1, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,],
               [0, 0, 0, 0, 0, 0,#+
                0, 0, 0, 0, 0, 0,
                0, 0, 1, 0, 0, 0,
                0, 1, 1, 0, 0, 0,
                1, 0, 1, 0, 0, 0,
                0, 0, 1, 0, 0, 0,],
               [0, 0, 0, 1, 0, 0,#+
                0, 0, 1, 1, 0, 0,
                0, 1, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,],  
               [0, 0, 0, 0, 0, 0,#+
                0, 0, 0, 1, 0, 0,
                0, 0, 1, 1, 0, 0,
                0, 1, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,],               
               [0, 0, 0, 0, 1, 0,#+
                0, 0, 0, 1, 1, 0,
                0, 0, 1, 0, 1, 0,
                0, 0, 0, 0, 1, 0,
                0, 0, 0, 0, 1, 0,
                0, 0, 0, 0, 1, 0,],               
               [0, 0, 1, 1, 1, 0,#-
                0, 1, 1, 1, 0, 0,
                1, 0, 1, 0, 1, 0,
                0, 0, 1, 0, 0, 0,
                0, 1, 1, 1, 0, 0,
                1, 0, 1, 0, 0, 0,],
               [0, 0, 1, 0, 0, 0,#+
                0, 1, 1, 0, 0, 0,
                1, 0, 1, 0, 0, 0,
                0, 0, 1, 0, 0, 0,
                0, 0, 1, 0, 0, 0,
                0, 0, 1, 0, 0, 0,],
               [0, 1, 1, 0, 0, 0,# -
                0, 1, 1, 0, 0, 0,
                1, 1, 1, 0, 0, 0,
                0, 0, 1, 0, 0, 0,
                1, 0, 1, 1, 0, 0,
                0, 1, 1, 0, 0, 0,],
               [0, 0, 1, 0, 0, 0,# -
                0, 0, 1, 0, 1, 0,
                1, 0, 1, 0, 1, 0,
                0, 0, 1, 0, 1, 0,
                1, 0, 1, 1, 0, 0,
                0, 1, 1, 1, 1, 0,],
               [0, 1, 1, 0, 1, 0,# -
                0, 1, 1, 0, 1, 0,
                0, 0, 1, 1, 0, 1,
                0, 0, 1, 0, 0, 0,
                0, 0, 1, 1, 0, 0,
                0, 1, 1, 0, 0, 0,],
               [0, 1, 1, 0, 0, 0,# -
                0, 1, 1, 0, 0, 0,
                1, 1, 1, 1, 0, 0,
                0, 1, 1, 0, 0, 0,
                0, 0, 1, 1, 0, 0,
                0, 1, 1, 0, 0, 0,],
               [0, 1, 1, 1, 0, 0,# -
                0, 1, 1, 1, 0, 0,
                1, 1, 1, 1, 0, 0,
                0, 1, 0, 1, 0, 0,
                0, 0, 0, 1, 0, 0,
                0, 1, 1, 1, 0, 0,],
               [0, 0, 1, 0, 1, 1,# - 
                0, 0, 1, 1, 1, 1,
                0, 0, 1, 0, 1, 1,
                0, 0, 1, 1, 0, 1,
                0, 0, 1, 0, 0, 1,
                0, 0, 1, 0, 0, 1,],
               [0, 0, 0, 0, 0, 0,#+
                0, 0, 0, 0, 0, 1,
                0, 0, 0, 0, 1, 1,
                0, 0, 0, 1, 0, 1,
                0, 0, 0, 0, 0, 1,
                0, 0, 0, 0, 0, 1],
               [0, 1, 0, 0, 0, 0,#-
                0, 1, 0, 0, 0, 1,
                0, 1, 0, 1, 1, 0,
                0, 0, 1, 0, 0, 1,
                0, 0, 0, 1, 1, 0,
                0, 1, 1, 0, 0, 1,],
               [0, 1, 0, 1, 1, 0,#-
                0, 1, 0, 0, 0, 1,
                0, 1, 1, 1, 1, 1,
                0, 0, 0, 0, 0, 1,
                0, 0, 0, 1, 1, 1,
                0, 1, 0, 0, 0, 1,],
               [0, 1, 0, 0, 0, 0,#-
                0, 1, 0, 0, 0, 0,
                0, 1, 0, 1, 1, 0,
                0, 0, 0, 0, 0, 0,
                0, 0, 0, 1, 1, 0,
                0, 1, 0, 0, 0, 0,],
               [0, 1, 0, 0, 0, 0,#-
                0, 1, 0, 0, 0, 1,
                0, 1, 0, 1, 1, 0,
                0, 0, 1, 0, 0, 1,
                0, 0, 0, 1, 1, 0,
                0, 1, 1, 0, 0, 1,],
                [0, 0, 0, 0, 0, 0, 
                   0, 0, 0, 0, 0, 0, 
                   0, 1, 1, 1, 0, 0, 
                   0, 1, 1, 1, 0, 0, 
                   1, 1, 1, 1, 0, 0, 
                   0, 0, 1, 0, 0, 0,],
                [0, 0, 0, 0, 0, 0,#+
                 0, 0, 0, 0, 1, 1,
                 0, 0, 0, 0, 1, 1,
                 0, 0, 0, 1, 1, 1,
                 0, 0, 0, 0, 0, 1,
                 0, 0, 0, 0, 0, 1]])
y = np.array([[1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,0, 0, 0]]).T

np.random.seed(1)

syn0 = [[ -0.16595599],
 [-10.38910509],
 [ -7.48111246],
 [ -3.25420846],
 [ -7.41926471],
 [ -2.30009721],
 [ -0.62747958],
 [  2.30027075],
 [  1.11344609],
 [  3.84311385],
 [ -8.25450013],
 [  1.26869701],
 [  7.08669606],
 [ -2.17169463],
 [  6.47892912],
 [ 10.91005962],
 [ -0.65536085],
 [  1.85998077],
 [ -0.71922612],
 [  0.24965648],
 [  0.82521532],
 [  0.583595  ],
 [ -6.88069418],
 [  1.28290324],
 [  3.00364946],
 [ -0.85995138],
 [  0.33872993],
 [ -6.38030784],
 [  7.34828984],
 [  2.59945835],
 [ -2.45247104],
 [-12.52280163],
 [ -2.45501515],
 [  3.49231156],
 [ 13.36045327],
 [  0.52928927]]

l1 = []
ty = datetime.now()
print(datetime.strftime(ty, "%H-%M-%S"))
 
def learning(id, syn0):
    it = 0
    if id == 1 :     
        for iter in range(6000000):
            if iter ==500000+it:
                it = iter
                print(datetime.now() - ty)
            l0 = x 
            l1 = sigmoid(np.dot(l0 ,syn0))

            l1_error = y - l1

            l1_delta = l1_error * sigmoid(l1, True)
            syn0 += np.dot( l0.T , l1_delta)
        te = datetime.now()
        ty3 = te - ty 
        print(ty3)
        print (l1)
    else : syn0 = np.load('vesi.npy')

learning(2, syn0)

new_one = np.array([0, 0, 1, 0, 0, 0,#+
                    0, 1, 1, 0, 0, 0,
                    1, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new, "+")
new_one = np.array([0, 0, 0, 0, 0, 0,#+
                    0, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 1, 1,
                    0, 0, 0, 1, 0, 1,
                    0, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 1])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new, "+")
new_one = np.array([0, 1, 0, 0, 0, 0,#-
                    0, 1, 0, 0, 0, 1,
                    0, 1, 0, 1, 1, 0,
                    0, 0, 1, 0, 0, 1,
                    0, 0, 0, 1, 1, 0,
                    0, 1, 1, 0, 0, 1,])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new, "-")
new_one = np.array([0, 0, 0, 0, 0, 0,#-
                    0, 0, 0, 0, 1, 1,
                    0, 0, 0, 0, 1, 1,
                    0, 0, 0, 1, 1, 1,
                    0, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 1])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new, "-")
new_one = np.array([0, 0, 1, 0, 0, 0,#-
                    0, 1, 0, 0, 1, 1,
                    0, 0, 0, 0, 1, 1,
                    0, 1, 0, 1, 1, 1,
                    1, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 1])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new , "-")
new_one = np.array([0, 0, 0, 0, 0, 0,#+
                    0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 1, 0,
                    0, 0, 0, 1, 1, 0,
                    0, 0, 1, 0, 1, 0,
                    0, 0, 0, 0, 1, 0])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new , "+")
new_one = np.array([0, 0, 1, 0, 0, 0,#-
                    0, 1, 0, 1, 1, 0,
                    0, 0, 0, 0, 0, 1,
                    0, 1, 0, 1, 1, 0,
                    1, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 1])
l1_new = sigmoid(np.dot(new_one , syn0))
print(l1_new , "-")

new_one= np.array([0, 0, 0, 0, 0, 0, 
                   0, 0, 0, 0, 0, 0, 
                   0, 0, 1, 0, 0, 0, 
                   0, 1, 1, 0, 0, 0, 
                   1, 0, 1, 0, 0, 0, 
                   0, 0, 1, 0, 0, 0,])

la = sigmoid(np.dot(new_one , syn0))
print(la)
np.save('vesi' , syn0)